name: Deploy to VM

on:
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Run backend tests
        run: npm test
        working-directory: ./backend
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Création du fichier .env pour le déploiement
      - name: Create .env file
        run: |
          cat > .env << EOF
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          PORT=3002
          EOF

      - name: Archive project
        run: |
          tar --warning=no-file-changed -czf app.tar.gz --exclude='.git' . || true

      - name: Check archive
        run: test -f app.tar.gz

      - name: Copy project to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 212.83.131.82
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "app.tar.gz,.env"
          target: "/root/"

      - name: Deploy with docker-compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 212.83.131.82
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root
            tar -xzf app.tar.gz
            docker-compose down
            docker-compose up -d --build